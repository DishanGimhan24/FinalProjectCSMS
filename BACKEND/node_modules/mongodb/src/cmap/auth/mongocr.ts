import * as crypto from 'crypto';

import { MongoMissingCredentialsError } from '../../error';
import { ns } from '../../utils';
import { type AuthContext, AuthProvider } from './auth_provider';

export class MongoCR extends AuthProvider {
  override async auth(authContext: AuthContext): Promise<void> {
    const { connection, credentials } = authContext;
    if (!credentials) {
      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');
    }

    const { username, password, source } = credentials;

<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> d1b85ecbe2b4bb72cb75be9affb263d0bd314cc6
>>>>>>> 22fdebd3c0e8919a55245d6d3eb6094cfd65e41e
    const { nonce } = await connection.commandAsync(
      ns(`${source}.$cmd`),
      { getnonce: 1 },
      undefined
    );
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
=======
    const { nonce } = await connection.command(ns(`${source}.$cmd`), { getnonce: 1 }, undefined);
>>>>>>> eeae4201a6777d5af1c9e6afe4635349ec710a63
>>>>>>> d1b85ecbe2b4bb72cb75be9affb263d0bd314cc6
>>>>>>> 22fdebd3c0e8919a55245d6d3eb6094cfd65e41e

    const hashPassword = crypto
      .createHash('md5')
      .update(`${username}:mongo:${password}`, 'utf8')
      .digest('hex');

    // Final key
    const key = crypto
      .createHash('md5')
      .update(`${nonce}${username}${hashPassword}`, 'utf8')
      .digest('hex');

    const authenticateCommand = {
      authenticate: 1,
      user: username,
      nonce,
      key
    };

<<<<<<< HEAD
    await connection.commandAsync(ns(`${source}.$cmd`), authenticateCommand, undefined);
=======
<<<<<<< HEAD
    await connection.commandAsync(ns(`${source}.$cmd`), authenticateCommand, undefined);
=======
<<<<<<< HEAD
    await connection.commandAsync(ns(`${source}.$cmd`), authenticateCommand, undefined);
=======
    await connection.command(ns(`${source}.$cmd`), authenticateCommand, undefined);
>>>>>>> eeae4201a6777d5af1c9e6afe4635349ec710a63
>>>>>>> d1b85ecbe2b4bb72cb75be9affb263d0bd314cc6
>>>>>>> 22fdebd3c0e8919a55245d6d3eb6094cfd65e41e
  }
}
